package 브루트_포스;
//https://www.acmicpc.net/problem/28215


public class 대피소_28215 {

    public static void main(String[] args) {
        String[] arr = new String[]{};
    }

}
/*
2차원 평면 KOI 마을에 N개의 집이 있다. 각 i 번째 집의 위치는 (Xi, Yi) 이다.
i번쨰 집과 j번쨰 집 사이의 거리는 |Xi - Xj| + |Yi - Yj| 이다. 즉, 두 집 사이의 거리는 X의 차이와 Y 의 차이의 합임. 예를 들어, (1,6) 에 위치한 집과 (2,4) 에 위치한 집은 (2 - 1) + (6 - 4) 인 3만큼 떨어져 있다.

KOI 마을은 재난 발생 시 주민들이 안전하게 대피할 수 있도록 K개의 집에 대피소를 설치할 계획이다. 모든 주민의 안전을 고려하여, 집에서 가장 가까운 대피소로 이동할 때 가장 긴 거리가 최소가 되도록 대피소를 설치할 K개의 집을 선택하고,
그 때 대피소와 가장 멀리 떨어진 집과의 거리를 구하려고 한다.

아래는 5개의 집이 각각 (1, 5), (3, 0), (3, 3), (6, 12), (8, 9) 에 위치한 마을의 예이다.
 */



/*
N 개의 집 중 K개의 대피소를 설치하여 대피소 까지의 거리를 최소로 만드는 문제임. 집은 최대 50개, 대피소는 최대 3개로 숫자가 작기 때문에 무작정 다 시도해보는 브루트포스로 풀 수 있음.

대피소를 어디에 설치 할 때 집들과의 거리가 가장 가까운지 찾는 문제임. 5개의 집이 있고 그 중 2개의 대피소를 구한다고 하면

A B C D E

A 부터 E 까지의 5개의 집이 있음. 여기에 2개의 대피소를 A, B 로 지정하겠음.

(A) (B) C D E
집 A 에서 E 까지 가장 가까운 대피소를 찾음. A 는 대피소이기 때문에 가장 가까운 대피소와의 거리는 0임. B 역시 0이 됨. C는 A 까지 거리가 2이고, B까지의 거리가 1이기 때문에 가장 가까운 대피소의 거리는 1이됨. 이렇게 각각의 집에서 가장 가까운 대피소까지의
거리를 구하면 다음과 같음.

A : 0, B : 0, C : 1 , D : 2, E : 3

이것으로 A,B 를 대피소로 지정했을 때 가장 먼 거리는 E에서 B까지의 거리인 3이됨.

## 조합 구하기
N개의 집에서 K개의 대피소를 정하는 것은 조합을 이용하여 구할 수 있음. 조합을 어떻게 사용하는지 몰라도 대피소가 최대 3개이기 때문에 반복문을 3번 사용해 구해도 상관 없음. N 개의 숫자들에서 K개의 조합을 구하려면 아래 반복문을 사용하면 됨.
for
 */